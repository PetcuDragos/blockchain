{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36105e9806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a20722e14610067578063715018a6146100975780638da5cb5b146100a15780638f32d59b146100bf578063c1724633146100dd578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610496565b610129565b60405161008e9190610522565b60405180910390f35b61009f61017e565b005b6100a961024d565b6040516100b691906104ec565b60405180910390f35b6100c7610276565b6040516100d49190610507565b60405180910390f35b6100f760048036038101906100f29190610496565b6102cd565b6040516101049190610507565b60405180910390f35b6101276004803603810190610122919061046d565b61032f565b005b600060018281548110610165577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060050201600301549050919050565b610186610276565b61018f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600060018281548110610309577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160040160009054906101000a900460ff169050919050565b610337610276565b61034057600080fd5b6103498161034c565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561038657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061045281610585565b92915050565b6000813590506104678161059c565b92915050565b60006020828403121561047f57600080fd5b600061048d84828501610443565b91505092915050565b6000602082840312156104a857600080fd5b60006104b684828501610458565b91505092915050565b6104c88161053d565b82525050565b6104d78161054f565b82525050565b6104e68161057b565b82525050565b600060208201905061050160008301846104bf565b92915050565b600060208201905061051c60008301846104ce565b92915050565b600060208201905061053760008301846104dd565b92915050565b60006105488261055b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61058e8161053d565b811461059957600080fd5b50565b6105a58161057b565b81146105b057600080fd5b5056fea2646970667358221220be84b995259e2525706b4897d69713d13a3aeb9bdae6061e07b6c4ad21698da764736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5E9 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA20722E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC1724633 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x165 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186 PUSH2 0x276 JUMP JUMPDEST PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x309 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 PUSH2 0x276 JUMP JUMPDEST PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x34C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x452 DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x467 DUP2 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48D DUP5 DUP3 DUP6 ADD PUSH2 0x443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B6 DUP5 DUP3 DUP6 ADD PUSH2 0x458 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C8 DUP2 PUSH2 0x53D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x54F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x501 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x537 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x548 DUP3 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x53D JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP2 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP5 0xB9 SWAP6 0x25 SWAP15 0x25 0x25 PUSH17 0x6B4897D69713D13A3AEB9BDAE6061E07B6 0xC4 0xAD 0x21 PUSH10 0x8DA764736F6C63430008 DIV STOP CALLER ",
			"sourceMap": "94:1556:0:-:0;;;;;;;;;;;;;561:10:1;544:6;;:28;;;;;;;;;;;;;;;;;;616:6;;;;;;;;;;583:40;;612:1;583:40;;;;;;;;;;;;94:1556:0;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2534:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:2"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:2",
										"type": ""
									}
								],
								"src": "7:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "204:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "214:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "236:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "223:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "223:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "214:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "279:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "252:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "252:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "252:33:2"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "182:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "190:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "198:5:2",
										"type": ""
									}
								],
								"src": "152:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "363:196:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "409:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "418:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "421:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "411:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "411:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "411:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "384:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "393:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "380:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "380:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "405:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "376:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "376:32:2"
											},
											"nodeType": "YulIf",
											"src": "373:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "435:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "450:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "464:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "454:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "479:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "514:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "525:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "534:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "489:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "489:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "479:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "333:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "344:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "356:6:2",
										"type": ""
									}
								],
								"src": "297:262:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "631:196:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "677:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "686:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "689:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "679:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "679:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "679:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "652:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "661:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "648:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "648:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "673:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "644:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "644:32:2"
											},
											"nodeType": "YulIf",
											"src": "641:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "703:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "718:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "732:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "722:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "747:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "793:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "802:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "757:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "757:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "747:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "601:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "612:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "624:6:2",
										"type": ""
									}
								],
								"src": "565:262:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "898:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "915:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "938:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "920:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "920:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "908:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "908:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "908:37:2"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "886:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "893:3:2",
										"type": ""
									}
								],
								"src": "833:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1016:50:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1033:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1053:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1038:14:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1038:21:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1026:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1026:34:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1026:34:2"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1004:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1011:3:2",
										"type": ""
									}
								],
								"src": "957:109:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1137:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1154:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1177:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1159:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1159:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1147:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1147:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1147:37:2"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1125:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1132:3:2",
										"type": ""
									}
								],
								"src": "1072:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1294:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1304:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1316:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1327:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1312:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1312:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1304:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1384:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1397:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1408:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1393:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1393:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1340:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1340:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1340:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1266:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1278:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1289:4:2",
										"type": ""
									}
								],
								"src": "1196:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1516:118:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1526:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1538:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1549:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1534:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1534:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1526:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1600:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1613:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1624:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1609:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1609:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1562:37:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1562:65:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1562:65:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1488:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1500:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1511:4:2",
										"type": ""
									}
								],
								"src": "1424:210:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1738:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1748:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1760:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1771:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1756:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1756:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1748:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1828:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1841:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1852:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1837:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1837:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1784:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1784:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1784:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1710:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1722:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1733:4:2",
										"type": ""
									}
								],
								"src": "1640:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1913:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1923:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1952:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1934:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1934:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1923:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1895:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1905:7:2",
										"type": ""
									}
								],
								"src": "1868:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2012:48:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2022:32:2",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2047:5:2"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2040:6:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2040:13:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2033:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2033:21:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2022:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1994:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2004:7:2",
										"type": ""
									}
								],
								"src": "1970:90:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2111:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2121:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2136:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2143:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2132:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2132:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2121:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2093:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2103:7:2",
										"type": ""
									}
								],
								"src": "2066:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2243:32:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2253:16:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2264:5:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2253:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2225:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2235:7:2",
										"type": ""
									}
								],
								"src": "2198:77:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2324:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2381:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2390:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2393:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2383:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2383:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2383:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2347:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2372:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2354:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2344:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2344:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2337:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2337:43:2"
											},
											"nodeType": "YulIf",
											"src": "2334:2:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2317:5:2",
										"type": ""
									}
								],
								"src": "2281:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2452:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2509:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2518:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2521:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2511:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2511:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2511:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2475:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2482:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2472:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2472:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2465:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2465:43:2"
											},
											"nodeType": "YulIf",
											"src": "2462:2:2"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2445:5:2",
										"type": ""
									}
								],
								"src": "2409:122:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630a20722e14610067578063715018a6146100975780638da5cb5b146100a15780638f32d59b146100bf578063c1724633146100dd578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610496565b610129565b60405161008e9190610522565b60405180910390f35b61009f61017e565b005b6100a961024d565b6040516100b691906104ec565b60405180910390f35b6100c7610276565b6040516100d49190610507565b60405180910390f35b6100f760048036038101906100f29190610496565b6102cd565b6040516101049190610507565b60405180910390f35b6101276004803603810190610122919061046d565b61032f565b005b600060018281548110610165577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060050201600301549050919050565b610186610276565b61018f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600060018281548110610309577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160040160009054906101000a900460ff169050919050565b610337610276565b61034057600080fd5b6103498161034c565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561038657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061045281610585565b92915050565b6000813590506104678161059c565b92915050565b60006020828403121561047f57600080fd5b600061048d84828501610443565b91505092915050565b6000602082840312156104a857600080fd5b60006104b684828501610458565b91505092915050565b6104c88161053d565b82525050565b6104d78161054f565b82525050565b6104e68161057b565b82525050565b600060208201905061050160008301846104bf565b92915050565b600060208201905061051c60008301846104ce565b92915050565b600060208201905061053760008301846104dd565b92915050565b60006105488261055b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61058e8161053d565b811461059957600080fd5b50565b6105a58161057b565b81146105b057600080fd5b5056fea2646970667358221220be84b995259e2525706b4897d69713d13a3aeb9bdae6061e07b6c4ad21698da764736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA20722E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC1724633 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x165 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186 PUSH2 0x276 JUMP JUMPDEST PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x309 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 PUSH2 0x276 JUMP JUMPDEST PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x34C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x452 DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x467 DUP2 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48D DUP5 DUP3 DUP6 ADD PUSH2 0x443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B6 DUP5 DUP3 DUP6 ADD PUSH2 0x458 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C8 DUP2 PUSH2 0x53D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4D7 DUP2 PUSH2 0x54F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x501 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x537 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x548 DUP3 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x53D JUMP JUMPDEST DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP2 EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP5 0xB9 SWAP6 0x25 SWAP15 0x25 0x25 PUSH17 0x6B4897D69713D13A3AEB9BDAE6061E07B6 0xC4 0xAD 0x21 PUSH10 0x8DA764736F6C63430008 DIV STOP CALLER ",
			"sourceMap": "94:1556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1306:127:1;;;:::i;:::-;;681:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;964:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1260:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1591:101:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1517:115:0;1578:4;1600:10;1611:8;1600:20;;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;1593:32;;1517:115;;;:::o;1306:127:1:-;864:9;:7;:9::i;:::-;856:18;;;;;;1400:1:::1;1363:40;;1384:6;::::0;::::1;;;;;;;;1363:40;;;;;;;;;;;;1426:1;1409:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1306:127::o:0;681:70::-;718:7;740:6;;;;;;;;;;;733:13;;681:70;:::o;964:83::-;1003:4;1036:6;;;;;;;;;;;1022:20;;:10;:20;;;1015:27;;964:83;:::o;1260:127:0:-;1330:4;1352:10;1363:8;1352:20;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;1345:35;;1260:127;;;:::o;1591:101:1:-;864:9;:7;:9::i;:::-;856:18;;;;;;1659:28:::1;1678:8;1659:18;:28::i;:::-;1591:101:::0;:::o;1823:178::-;1912:1;1892:22;;:8;:22;;;;1884:31;;;;;;1955:8;1926:38;;1947:6;;;;;;;;;;1926:38;;;;;;;;;;;;1987:8;1970:6;;:26;;;;;;;;;;;;;;;;;;1823:178;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;624:6;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:109::-;1038:21;1053:5;1038:21;:::i;:::-;1033:3;1026:34;1016:50;;:::o;1072:118::-;1159:24;1177:5;1159:24;:::i;:::-;1154:3;1147:37;1137:53;;:::o;1196:222::-;1289:4;1327:2;1316:9;1312:18;1304:26;;1340:71;1408:1;1397:9;1393:17;1384:6;1340:71;:::i;:::-;1294:124;;;;:::o;1424:210::-;1511:4;1549:2;1538:9;1534:18;1526:26;;1562:65;1624:1;1613:9;1609:17;1600:6;1562:65;:::i;:::-;1516:118;;;;:::o;1640:222::-;1733:4;1771:2;1760:9;1756:18;1748:26;;1784:71;1852:1;1841:9;1837:17;1828:6;1784:71;:::i;:::-;1738:124;;;;:::o;1868:96::-;1905:7;1934:24;1952:5;1934:24;:::i;:::-;1923:35;;1913:51;;;:::o;1970:90::-;2004:7;2047:5;2040:13;2033:21;2022:32;;2012:48;;;:::o;2066:126::-;2103:7;2143:42;2136:5;2132:54;2121:65;;2111:81;;;:::o;2198:77::-;2235:7;2264:5;2253:16;;2243:32;;;:::o;2281:122::-;2354:24;2372:5;2354:24;:::i;:::-;2347:5;2344:35;2334:2;;2393:1;2390;2383:12;2334:2;2324:79;:::o;2409:122::-;2482:24;2500:5;2482:24;:::i;:::-;2475:5;2472:35;2462:2;;2521:1;2518;2511:12;2462:2;2452:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "302600",
				"executionCost": "23587",
				"totalCost": "326187"
			},
			"external": {
				"_getAssetForSaleForAsset(uint256)": "2407",
				"_getCostForAsset(uint256)": "infinite",
				"isOwner()": "1240",
				"owner()": "1244",
				"renounceOwnership()": "24294",
				"transferOwnership(address)": "24760"
			},
			"internal": {
				"_changeOwnerForAsset(uint256,address,address)": "infinite",
				"_createAsset(struct Assets.Asset memory)": "infinite",
				"_getOwnerAssetCount(address)": "infinite",
				"_getOwnerFromAssetId(uint256)": "infinite",
				"_setCostForAsset(uint256,uint256)": "infinite",
				"_setForSaleForAsset(uint256,bool)": "infinite"
			}
		},
		"methodIdentifiers": {
			"_getAssetForSaleForAsset(uint256)": "c1724633",
			"_getCostForAsset(uint256)": "0a20722e",
			"isOwner()": "8f32d59b",
			"owner()": "8da5cb5b",
			"renounceOwnership()": "715018a6",
			"transferOwnership(address)": "f2fde38b"
		}
	},
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "asset_id",
					"type": "uint256"
				}
			],
			"name": "_getAssetForSaleForAsset",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "asset_id",
					"type": "uint256"
				}
			],
			"name": "_getCostForAsset",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "isOwner",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}